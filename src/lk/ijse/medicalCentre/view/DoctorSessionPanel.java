/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.medicalCentre.view;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import lk.ijse.medicalCentre.controller.ManageDoctorController;
import lk.ijse.medicalCentre.controller.ManageDoctorSessionController;
import lk.ijse.medicalCentre.core.dto.DoctorDTO;
import lk.ijse.medicalCentre.core.dto.DoctorSessionDTO;
import lk.ijse.medicalCentre.validation.Validation;

/**
 *
 * @author pasindu
 */
public class DoctorSessionPanel extends javax.swing.JPanel {
    
    private String SID;
    
    /**
     * Creates new form DoctorSessionPanel
     */
    public DoctorSessionPanel() {
        initComponents();
        //txtSessionID.setEditable(false);
        loadAllDoctorNames();
        loadAllDoctors();
        txtRemoveID.setEditable(false);
        
        tblDocSession.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                try{
                if (tblDocSession.getSelectedRow() == -1) return;
                 SID=tblDocSession.getValueAt(tblDocSession.getSelectedRow(), 0).toString();
                 txtSessionID.setText(SID);
                 txtRemoveID.setText(SID);
                 txtDocID.setText( tblDocSession.getValueAt(tblDocSession.getSelectedRow(), 1).toString());
                 txtSessionDate.setText(tblDocSession.getValueAt(tblDocSession.getSelectedRow(), 2).toString());
                 txtStartTime.setText( tblDocSession.getValueAt(tblDocSession.getSelectedRow(), 3).toString());
                 txtEndTime.setText( tblDocSession.getValueAt(tblDocSession.getSelectedRow(), 4).toString());
                 txtPatientCount.setText(tblDocSession.getValueAt(tblDocSession.getSelectedRow(), 5).toString());
                }catch(NullPointerException ex){
                    
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPatientCount = new org.jdesktop.swingx.JXTextField();
        txtSessionID = new java.awt.TextField();
        removeReloadButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtRemoveID = new javax.swing.JTextField();
        cmdDoctor = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        addSessionButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocSession = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        txtSessionDate = new org.jdesktop.swingx.JXTextField();
        txtStartTime = new org.jdesktop.swingx.JXTextField();
        txtEndTime = new org.jdesktop.swingx.JXTextField();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jXLabel3 = new org.jdesktop.swingx.JXLabel();
        jXLabel4 = new org.jdesktop.swingx.JXLabel();
        txtDocID = new org.jdesktop.swingx.JXTextField();

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel2.setText("Session ID");

        jXLabel1.setText("Maximum Patients");

        jLabel5.setText("Session Date");

        txtPatientCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientCountActionPerformed(evt);
            }
        });

        txtSessionID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSessionIDActionPerformed(evt);
            }
        });

        removeReloadButton.setText("Remove & Reload");
        removeReloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeReloadButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Session start time");

        jLabel6.setText("Remove Session (SID)");

        txtRemoveID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRemoveIDActionPerformed(evt);
            }
        });

        cmdDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmdDoctor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmdDoctorItemStateChanged(evt);
            }
        });
        cmdDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDoctorActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Doctor");

        addSessionButton.setText("Create Session");
        addSessionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSessionButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Session end time");

        tblDocSession.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Session ID", "Doctor ID", "Date", "Start Time", "End TIme", "Max Patients"
            }
        ));
        jScrollPane1.setViewportView(tblDocSession);

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        txtEndTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndTimeActionPerformed(evt);
            }
        });

        jXLabel2.setText("   H");

        jXLabel3.setText("   H");

        jXLabel4.setText("Doctor ID");

        txtDocID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXPanel1Layout = new javax.swing.GroupLayout(jXPanel1);
        jXPanel1.setLayout(jXPanel1Layout);
        jXPanel1Layout.setHorizontalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jXLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addGap(63, 63, 63)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSessionID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSessionDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdDoctor, 0, 121, Short.MAX_VALUE)
                            .addComponent(txtDocID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(54, 54, 54))
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addComponent(jXLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                .addGap(63, 63, 63)))
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addSessionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(txtPatientCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtEndTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtStartTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jXLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(29, 29, 29)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(txtRemoveID, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                                .addComponent(removeReloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))))))
        );
        jXPanel1Layout.setVerticalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jXPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addComponent(txtSessionID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSessionDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addGap(24, 24, 24)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmdDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDocID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jXLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXPanel1Layout.createSequentialGroup()
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPatientCount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57)))
                        .addGap(26, 26, 26)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addSessionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jXPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRemoveID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeReloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(158, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 802, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 1, Short.MAX_VALUE)
                    .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSessionIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSessionIDActionPerformed
        txtSessionDate.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_txtSessionIDActionPerformed

    private void txtRemoveIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRemoveIDActionPerformed
        
        
    }//GEN-LAST:event_txtRemoveIDActionPerformed

    private void addSessionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSessionButtonActionPerformed
        if(Validation.validateText(txtSessionDate.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter the date");
            txtSessionDate.requestFocus();
            return;
        }
        if(Validation.validateText(txtPatientCount.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter patient count");
            txtPatientCount.requestFocus();
            return;
        }
        if(Validation.validateText(txtPatientCount.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter patient count");
            txtPatientCount.requestFocus();
            return;
        }if(Validation.validateText(txtStartTime.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter Session start time");
            txtStartTime.requestFocus();
            return;
        }
        if(Validation.validateText(txtEndTime.getText())){
            JOptionPane.showMessageDialog(null, "Please Enter Session end time");
            txtEndTime.requestFocus();
            return;
        }
        if(Validation.checkCount(txtPatientCount.getText())){
            
        }else{
            JOptionPane.showMessageDialog(null,"Please enter a valid number");
            txtPatientCount.requestFocus();
            return;
        }
        if (Validation.validateDOB(txtSessionDate.getText()) ){
            if(Validation.checkTimeText(txtStartTime.getText())){
                if(Validation.checkTimeText(txtEndTime.getText())){
                    //Write ur code in here
                    DoctorSessionDTO doctor = new DoctorSessionDTO(txtSessionID.getText(),
                    txtDocID.getText(), 
                    txtSessionDate.getText(),
                    txtPatientCount.getText(),
                    txtStartTime.getText(),
                    txtEndTime.getText());
                try {
                    boolean result = ManageDoctorSessionController.addDoctorSession(doctor);

                    if (result){
                        JOptionPane.showMessageDialog(this, "Doctor has been successfully added.");
                        //loadAllCustomers();                
                    }else{
                        JOptionPane.showMessageDialog(this, "Doctor hasn't been added due to some error");
                    }
                    loadAllDoctors();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Doctor hasn't been added due to some error.");    
            }
                    
            }else{
            JOptionPane.showMessageDialog(null,"Please fill session end time using this format (hh:mm:H)");
            txtEndTime.requestFocus();
                }
            }else{
                JOptionPane.showMessageDialog(null,"Please fill session start time using this format (hh:mm:H)");
                txtStartTime.requestFocus();
            }
        }else{
            System.err.println(txtSessionDate.getText());
            JOptionPane.showMessageDialog(null,"Please fill Session date as this format (YYYY-MM-DD)");
        }      
    }//GEN-LAST:event_addSessionButtonActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtSessionDate.setText("");
        txtPatientCount.setText("");
        txtStartTime.setText("");
        txtEndTime.setText("");
        txtSessionDate.requestFocus();
        
    }//GEN-LAST:event_btnNewActionPerformed

    private void cmdDoctorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmdDoctorItemStateChanged
        try {
            if (cmdDoctor.getSelectedIndex() == -1) return;
            
            DoctorDTO doctor = ManageDoctorController.searchDoctor(new DoctorDTO(null,cmdDoctor.getSelectedItem().toString(),null,null,null,null));
            if (doctor == null) return;
            
            txtDocID.setText(doctor.getDoctorID());
             
        }catch (Exception ex) {
            Logger.getLogger(DoctorSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_cmdDoctorItemStateChanged

    private void removeReloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeReloadButtonActionPerformed
        DoctorSessionDTO doct = new DoctorSessionDTO(SID,
                null, 
                null, 
               null,null,null);
        try {
            boolean result = ManageDoctorSessionController.deleteDoctorSession(doct);
            
            if (result){
                JOptionPane.showMessageDialog(this, "Session has been successfully deleted.");
                loadAllDoctors();
            }else{
                JOptionPane.showMessageDialog(this, "Session hasn't been added due to some error");
            }
            
        } catch (Exception ex) {
           JOptionPane.showMessageDialog(this, "Session hasn't been added due to some error");
        }
    }//GEN-LAST:event_removeReloadButtonActionPerformed

    private void cmdDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdDoctorActionPerformed

    private void txtDocIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocIDActionPerformed
        txtPatientCount.requestFocus();;
// TODO add your handling code here:
    }//GEN-LAST:event_txtDocIDActionPerformed

    private void txtPatientCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientCountActionPerformed
        txtStartTime.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientCountActionPerformed

    private void txtEndTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndTimeActionPerformed
        txtEndTime.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_txtEndTimeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSessionButton;
    private javax.swing.JButton btnNew;
    private javax.swing.JComboBox<String> cmdDoctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel3;
    private org.jdesktop.swingx.JXLabel jXLabel4;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private javax.swing.JButton removeReloadButton;
    private javax.swing.JTable tblDocSession;
    private org.jdesktop.swingx.JXTextField txtDocID;
    private org.jdesktop.swingx.JXTextField txtEndTime;
    private org.jdesktop.swingx.JXTextField txtPatientCount;
    private javax.swing.JTextField txtRemoveID;
    private org.jdesktop.swingx.JXTextField txtSessionDate;
    private java.awt.TextField txtSessionID;
    private org.jdesktop.swingx.JXTextField txtStartTime;
    // End of variables declaration//GEN-END:variables
    private void loadAllDoctorNames() {
        try {
            ArrayList<DoctorDTO> allCustomers = ManageDoctorController.getAllDoctors();

            cmdDoctor.removeAllItems();
            if (allCustomers == null) return;
            
            for (DoctorDTO doctor : allCustomers) {
                cmdDoctor.addItem(doctor.getName());
            }
        } catch (Exception ex) {
            Logger.getLogger(DoctorSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    private void loadAllDoctors(){
        try {
            ArrayList<DoctorSessionDTO> allDoctorSessions = ManageDoctorSessionController.getAllDoctorsSession();
            DefaultTableModel dtm = (DefaultTableModel) tblDocSession.getModel();
            dtm.setRowCount(0);
            if (allDoctorSessions != null) {
            
            for (DoctorSessionDTO doctorSession : allDoctorSessions) {
                Object[] rowData={
                doctorSession.getSID(),    
                doctorSession.getDoctorID(),
                doctorSession.getSessiondate(),
                doctorSession.getStarttime(),
                doctorSession.getEndtime(),
                doctorSession.getMaximum_patients()
            };
            dtm.addRow(rowData);
            } 
        }
        }catch (Exception ex) {
            Logger.getLogger(DoctorSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
