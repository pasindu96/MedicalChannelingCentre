/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ac.uok.view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ac.uok.core.dto.DrugsDTO;
import lk.ac.uok.core.dto.PatientDTO;
import lk.ac.uok.dao.db.DBConnection;

/**
 *
 * @author Pasindu Wijesinghe
 */
public class PatientPrescription extends javax.swing.JPanel {

    /**
     * Creates new form Patient
     */
    
    public PatientPrescription() {
        initComponents();
        loadPatient();
        loadAllDrugs();
        txtPatientName.setEditable(false);
        txtPrescription.setEditable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbPatientID = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPrescription = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmbDrugs = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDrugs = new javax.swing.JTable();
        txtNewPatient = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(830, 560));
        setPreferredSize(new java.awt.Dimension(830, 560));

        cmbPatientID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPatientIDItemStateChanged(evt);
            }
        });
        cmbPatientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatientIDActionPerformed(evt);
            }
        });

        jLabel1.setText("Patient NIC");

        txtPrescription.setColumns(20);
        txtPrescription.setRows(5);
        jScrollPane1.setViewportView(txtPrescription);

        jLabel2.setText("Patient Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Today Prescription");

        btnAdd.setText("Add ");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel4.setText("Drug Name");

        tblDrugs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name"
            }
        ));
        jScrollPane3.setViewportView(tblDrugs);

        txtNewPatient.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNewPatient.setText(" New Patient");
        txtNewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(cmbDrugs, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbPatientID, 0, 215, Short.MAX_VALUE)
                            .addComponent(txtPatientName))
                        .addGap(129, 129, 129)
                        .addComponent(txtNewPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNewPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(txtPatientName))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbDrugs)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPatientIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPatientIDItemStateChanged
        for (PatientDTO patient : patientDTO) {
            if(cmbPatientID.getSelectedItem().equals(patient.getNIC())){
                txtPatientName.setText(patient.getPatient_name());
            }
        }
        /*String sql="select d.drugName from drugs d,patient_drugs pd,patient p where p.NIC = ? and d.drugID=pd.drugID and p.NIC=pd.NIC";
        try {
            PreparedStatement pstm=connection.prepareStatement(sql);
            pstm.setObject(1, cmbPatientID.getSelectedItem());
            ResultSet rst=pstm.executeQuery();
            while(rst.next()){
                txtPrescription.append(rst.getString(1)+"\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PatientPrescription.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
    }//GEN-LAST:event_cmbPatientIDItemStateChanged
    Connection connection=DBConnection.getInstance().getConnection();
    
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
            try {
            String sql="insert into patient_drugs values(?,?,?);";
            PreparedStatement pstm=connection.prepareStatement(sql);
            pstm.setObject(1, null);
            pstm.setObject(2, cmbPatientID.getSelectedItem());
            pstm.setObject(3, getDrugID(cmbDrugs.getSelectedItem()));
            int affectedRaws=pstm.executeUpdate();
            if(affectedRaws>0){
                JOptionPane.showMessageDialog(this, "Added drug to the prescription");
                DefaultTableModel dtm=(DefaultTableModel) tblDrugs.getModel();
                dtm.addRow(cmbDrugs.getSelectedObjects());
            } 
            else
                JOptionPane.showMessageDialog(this, "Error occured");   
        } catch (SQLException ex) {
            Logger.getLogger(PatientPrescription.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtNewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewPatientActionPerformed
        DefaultTableModel dtm=(DefaultTableModel) tblDrugs.getModel();
        dtm.setRowCount(0);
    }//GEN-LAST:event_txtNewPatientActionPerformed

    private void cmbPatientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatientIDActionPerformed
        String sql="select d.drugName from drugs d,patient_drugs pd,patient p where p.NIC = ? and d.drugID=pd.drugID and p.NIC=pd.NIC";
        try {
            txtPrescription.setText("");
            PreparedStatement pstm=connection.prepareStatement(sql);
            pstm.setObject(1, cmbPatientID.getSelectedItem());
            ResultSet rst=pstm.executeQuery();
            while(rst.next()){
                txtPrescription.append(rst.getString(1)+"\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PatientPrescription.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbPatientIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox<String> cmbDrugs;
    private javax.swing.JComboBox<String> cmbPatientID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblDrugs;
    private javax.swing.JButton txtNewPatient;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextArea txtPrescription;
    // End of variables declaration//GEN-END:variables
    ArrayList<PatientDTO> patientDTO=new ArrayList<>();
    private void loadPatient() {
        Connection connection=DBConnection.getInstance().getConnection();
        String sql="select * from patient;";
        try {
            Statement stm=connection.createStatement();
            ResultSet rst=stm.executeQuery(sql);
            cmbPatientID.removeAllItems();;
            while(rst.next()){
                cmbPatientID.addItem(rst.getString(1));
                patientDTO.add(new PatientDTO(
                        rst.getString(1), 
                        rst.getString(2), 
                        null, 
                        null, 
                        null)
                );
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(PatientPrescription.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    ArrayList<DrugsDTO> drugDTO=new ArrayList<>();
    private void loadAllDrugs() {
        Connection connection=DBConnection.getInstance().getConnection();
        String sql="select * from drugs;";
        try {
            Statement stm=connection.createStatement();
            ResultSet rst=stm.executeQuery(sql);
            cmbDrugs.removeAllItems();;
            while(rst.next()){
                cmbDrugs.addItem(rst.getString(2));
                drugDTO.add(new DrugsDTO(
                        rst.getInt(1), 
                        rst.getString(2) 
                    )
                );
            }   
        } catch (SQLException ex) {
            Logger.getLogger(PatientPrescription.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private int getDrugID(Object selectedIndex) {
        int drugID=0;
        for (DrugsDTO drugsDTO : drugDTO) {
            if(selectedIndex.equals(drugsDTO.getDrugName()))
                drugID=drugsDTO.getDrugID();
        }
        return drugID;
    }
}
